/*!
\page GUI RASMUS Graphical User Interface

The RASMUS graphical user interface relies on the Qt framework version >= 4.8.

\section overview Overview

There are several windows in the GUI. The MainWindow contains a console for
evaluating RASMUS commands and an environment sidebar which contains the current
variables in global scope.

The MainWindow contains a Console which implements how the console works. In
order to keep coupling between the actual interpreter and the GUI light the
class Interpreter is responsible almost all communication the rasmus::frontend.

It can be quite inconvenient to only use the console for evaluating RASMUS
commands, so there is also an editor. The editor is implemented in the Editor
class. The editor has some rudimentary syntax and error highlighting, which are
implemented in the Highlighter and Intellisense classes.

For viewing relations there is a relation window. The relation window is based
around the Qt method of showing data in tables using a model (i.e. data). The
RelationModel is that model and handles interacting with the rasmus::frontend
for getting/updating the data in the relations. The relations are displayed via
the RelationWindow which of course uses a RelationModel.

It is possible to customize how the GUI looks by changing the fonts, colors, etc.
The Settings class is responsible for storing what that customization is.
The settings implementation relies on the Qt frameworks method of storing user
data locally on the computer.

There is a crucial part of the GUI regarding the Editor. Since there is syntax
highlighting, it needs to be able to parse the code and recognize tokens and
identify them as keywords (or other things). In order to do this, there is an
autogenerated table that allows for parsing. This table is generated with the
<a href="https://github.com/jasn/lexer_generator">Lexer Generator</a>
project using the file src/frontend/RASMUS.lang. Whenever the language gets new
keywords or the grammar changes, the table.hh and table.cc files need to be
updated accordingly.

*/